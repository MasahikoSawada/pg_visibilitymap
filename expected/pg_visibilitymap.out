create extension pg_visibilitymap;
CREATE TABLE t1 AS SELECT * FROM generate_series(1,1000) AS p;
\d t1
      Table "public.t1"
 Column |  Type   | Modifiers 
--------+---------+-----------
 p      | integer | 

VACUUM t1;
SELECT relpages FROM pg_class WHERE relname = 't1';
 relpages 
----------
        5
(1 row)

SELECT * FROM pg_visibilitymap('t1');
 blkno | all_visible 
-------+-------------
     0 | t
     1 | t
     2 | t
     3 | t
     4 | t
(5 rows)

DELETE FROM t1 WHERE p < 500;
SELECT * FROM pg_visibilitymap('t1');
 blkno | all_visible 
-------+-------------
     0 | f
     1 | f
     2 | f
     3 | t
     4 | t
(5 rows)

VACUUM t1;
SELECT * FROM pg_visibilitymap('t1');
 blkno | all_visible 
-------+-------------
     0 | t
     1 | t
     2 | t
     3 | t
     4 | t
(5 rows)

DROP TABLE t1;
--
-- Errors
--
CREATE TABLE t2 (col int primary key);
INSERT INTO t2 SELECT generate_series(1,100);
CREATE VIEW t2_view AS (SELECT * FROM t2);
CREATE MATERIALIZED VIEW t2_matview AS (SELECT * FROM t2);
SELECT pg_is_all_visible('t2', 0);
 pg_is_all_visible 
-------------------
 f
(1 row)

SELECT pg_is_all_visible('t2_view', 0);
ERROR:  "t2_view" is not a table or materialized view
SELECT pg_is_all_visible('t2_matview', 0);
 pg_is_all_visible 
-------------------
 f
(1 row)

DROP TABLE t2 CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to view t2_view
drop cascades to materialized view t2_matview
